// This class is autogenerated. Do NOT modify

class endpointConstants {
    static global = { 
        trafficWatch: { 
            adminTrafficWatch: "/admin/traffic-watch"
        }, 
        analyzers: { 
            analyzers: "/analyzers"
        }, 
        secretKey: { 
            adminSecrets: "/admin/secrets",
            adminSecretsGenerate: "/admin/secrets/generate",
            secretsGenerate: "/secrets/generate",
            adminSecretsDistribute: "/admin/secrets/distribute"
        }, 
        sorters: { 
            sorters: "/sorters"
        }, 
        snmp: { 
            monitoringSnmp: "/monitoring/snmp",
            monitoringSnmpBulk: "/monitoring/snmp/bulk",
            monitoringSnmpOids: "/monitoring/snmp/oids"
        }, 
        clusterDashboard: { 
            clusterDashboardWatch: "/cluster-dashboard/watch",
            adminClusterDashboardRemoteWatch: "/admin/cluster-dashboard/remote/watch"
        }, 
        serverDashboard: { 
            serverDashboardWatch: "/server-dashboard/watch"
        }, 
        serverNotificationCenter: { 
            serverNotificationCenterWatch: "/server/notification-center/watch",
            serverNotificationCenterDismiss: "/server/notification-center/dismiss",
            serverNotificationCenterPostpone: "/server/notification-center/postpone"
        }, 
        adminCertificates: { 
            adminCertificates: "/admin/certificates",
            adminCertificatesPurge: "/admin/certificates/purge",
            certificatesWhoami: "/certificates/whoami",
            adminCertificatesEdit: "/admin/certificates/edit",
            adminCertificatesExport: "/admin/certificates/export",
            adminCertificatesMode: "/admin/certificates/mode",
            adminCertificatesClusterDomains: "/admin/certificates/cluster-domains",
            adminCertificatesReplacementReset: "/admin/certificates/replacement/reset",
            adminCertificatesReplacementStatus: "/admin/certificates/replacement/status",
            adminCertificatesLetsencryptRenewalDate: "/admin/certificates/letsencrypt/renewal-date",
            adminCertificatesLetsencryptForceRenew: "/admin/certificates/letsencrypt/force-renew",
            adminCertificatesRefresh: "/admin/certificates/refresh",
            adminCertificatesReplaceClusterCert: "/admin/certificates/replace-cluster-cert",
            adminCertificatesLocalState: "/admin/certificates/local-state",
            adminCertificatesLocalStateApply: "/admin/certificates/local-state/apply"
        }, 
        operationsServer: { 
            adminOperationsNextOperationId: "/admin/operations/next-operation-id",
            adminOperationsKill: "/admin/operations/kill",
            operationsState: "/operations/state"
        }, 
        license: { 
            licenseEula: "/license/eula",
            adminLicenseEulaAccept: "/admin/license/eula/accept",
            licenseStatus: "/license/status",
            licenseConfiguration: "/license/configuration",
            adminLicenseActivate: "/admin/license/activate",
            adminLicenseForceUpdate: "/admin/license/forceUpdate",
            licenseSupport: "/license/support",
            adminLicenseRenew: "/admin/license/renew",
            licenseServerConnectivity: "/license-server/connectivity"
        }, 
        studioFeedback: { 
            studioFeedback: "/studio/feedback"
        }, 
        studioTasks: { 
            adminStudioTasksFullDataDirectory: "/admin/studio-tasks/full-data-directory",
            adminStudioTasksFolderPathOptions: "/admin/studio-tasks/folder-path-options",
            adminStudioTasksOfflineMigrationTest: "/admin/studio-tasks/offline-migration-test",
            studioTasksPeriodicBackupTestCredentials: "/studio-tasks/periodic-backup/test-credentials",
            studioTasksIsValidName: "/studio-tasks/is-valid-name",
            studioTasksAdminMigratorPath: "/studio-tasks/admin/migrator-path",
            studioTasksFormat: "/studio-tasks/format",
            studioTasksNextCronExpressionOccurrence: "/studio-tasks/next-cron-expression-occurrence"
        }, 
        adminConfiguration: { 
            adminConfigurationSettings: "/admin/configuration/settings",
            adminConfigurationStudio: "/admin/configuration/studio",
            configurationStudio: "/configuration/studio",
            adminConfigurationClient: "/admin/configuration/client",
            configurationClient: "/configuration/client"
        }, 
        adminCpuCredits: { 
            adminCpuCredits: "/admin/cpu-credits",
            adminCpuCreditsSync: "/admin/cpu-credits/sync",
            debugCpuCredits: "/debug/cpu-credits"
        }, 
        adminDatabases: { 
            adminDatabases: "/admin/databases",
            adminDatabasesNode: "/admin/databases/node",
            adminDatabasesReorder: "/admin/databases/reorder",
            adminRestorePoints: "/admin/restore/points",
            adminRestoreDatabase: "/admin/restore/database",
            adminDatabasesDisable: "/admin/databases/disable",
            adminDatabasesEnable: "/admin/databases/enable",
            adminDatabasesIndexing: "/admin/databases/indexing",
            adminDatabasesDynamicNodeDistribution: "/admin/databases/dynamic-node-distribution",
            adminDatabasesPromote: "/admin/databases/promote",
            adminConsole: "/admin/console",
            adminReplicationConflictsSolver: "/admin/replication/conflicts/solver",
            adminCompact: "/admin/compact",
            adminDatabasesUnusedIds: "/admin/databases/unused-ids",
            adminMigrate: "/admin/migrate",
            adminMigrateOffline: "/admin/migrate/offline",
            adminDatabasesSetLock: "/admin/databases/set-lock"
        }, 
        adminDump: { 
            adminDebugDump: "/admin/debug/dump",
            adminDebugGcdump: "/admin/debug/gcdump"
        }, 
        adminIoMetrics: { 
            adminDebugIoMetrics: "/admin/debug/io-metrics",
            adminDebugIoMetricsLive: "/admin/debug/io-metrics/live"
        }, 
        adminMetrics: { 
            adminMetrics: "/admin/metrics"
        }, 
        adminMonitoring: { 
            adminMonitoringV1Server: "/admin/monitoring/v1/server",
            adminMonitoringV1Databases: "/admin/monitoring/v1/databases",
            adminMonitoringV1Indexes: "/admin/monitoring/v1/indexes",
            adminMonitoringV1Collections: "/admin/monitoring/v1/collections"
        }, 
        adminServerWide: { 
            adminConfigurationServerWide: "/admin/configuration/server-wide",
            adminConfigurationServerWideBackup: "/admin/configuration/server-wide/backup",
            adminConfigurationServerWideExternalReplication: "/admin/configuration/server-wide/external-replication",
            adminConfigurationServerWideTask: "/admin/configuration/server-wide/task",
            adminConfigurationServerWideTasks: "/admin/configuration/server-wide/tasks",
            adminConfigurationServerWideState: "/admin/configuration/server-wide/state"
        }, 
        adminStats: { 
            adminStats: "/admin/stats"
        }, 
        adminStorage: { 
            adminDebugStorageEnvironmentReport: "/admin/debug/storage/environment/report"
        }, 
        adminStudioServerWide: { 
            adminServerWideTasks: "/admin/server-wide/tasks",
            adminServerWideBackupDataDirectory: "/admin/server-wide/backup-data-directory"
        }, 
        adminTcpConnectionDebugInfo: { 
            adminDebugInfoTcpStats: "/admin/debug/info/tcp/stats",
            adminDebugInfoTcpActiveConnections: "/admin/debug/info/tcp/active-connections"
        }, 
        backupDatabase: { 
            periodicBackup: "/periodic-backup",
            periodicBackupStatus: "/periodic-backup/status",
            adminDebugPeriodicBackupTimers: "/admin/debug/periodic-backup/timers"
        }, 
        buildVersion: { 
            buildVersion: "/build/version",
            buildVersionUpdates: "/build/version/updates"
        }, 
        databasesDebug: { 
            adminDebugDatabasesIdle: "/admin/debug/databases/idle"
        }, 
        databases: { 
            databases: "/databases",
            topology: "/topology",
            debugIsLoaded: "/debug/is-loaded",
            adminRemoteServerBuildVersion: "/admin/remote-server/build/version"
        }, 
        debug: { 
            debugRoutes: "/debug/routes"
        }, 
        emptyMessage: { 
            testEmptyMessage: "/test/empty-message",
            testDelay: "/test/delay",
            testSizedMessage: "/test/sized-message"
        }, 
        setup: { 
            setupAlive: "/setup/alive",
            setupDnsNCert: "/setup/dns-n-cert",
            setupUserDomains: "/setup/user-domains",
            setupPopulateIps: "/setup/populate-ips",
            setupParameters: "/setup/parameters",
            setupIps: "/setup/ips",
            setupHosts: "/setup/hosts",
            setupUnsecured: "/setup/unsecured",
            setupSecured: "/setup/secured",
            setupLetsencryptAgreement: "/setup/letsencrypt/agreement",
            setupLetsencrypt: "/setup/letsencrypt",
            setupContinueExtract: "/setup/continue/extract",
            setupContinue: "/setup/continue",
            setupFinish: "/setup/finish"
        }, 
        studio: { 
            favicon_ico: "/favicon.ico",
            authError_html: "/auth-error.html",
            eulaIndex_html: "/eula/index.html",
            eula$: "/eula/",
            wizardIndex_html: "/wizard/index.html",
            wizard$: "/wizard/",
            studioIndex_html: "/studio/index.html",
            studio$: "/studio/"
        }, 
        tcpConnectionInfo: { 
            infoTcp: "/info/tcp",
            infoRemoteTaskTopology: "/info/remote-task/topology",
            infoRemoteTaskTcp: "/info/remote-task/tcp"
        }, 
        testConnection: { 
            adminTestConnection: "/admin/test-connection"
        }, 
        adminAnalyzers: { 
            adminAnalyzers: "/admin/analyzers"
        }, 
        adminLogs: { 
            adminLogsConfiguration: "/admin/logs/configuration",
            adminLogsWatch: "/admin/logs/watch"
        }, 
        adminMemory: { 
            adminMemoryGc: "/admin/memory/gc"
        }, 
        adminScriptRunnersDebugInfo: { 
            adminDebugScriptRunners: "/admin/debug/script-runners"
        }, 
        adminSorters: { 
            adminSorters: "/admin/sorters"
        }, 
        rachisAdmin: { 
            adminRachisSend: "/admin/rachis/send",
            rachisWaitfor: "/rachis/waitfor",
            adminClusterObserverSuspend: "/admin/cluster/observer/suspend",
            adminClusterObserverDecisions: "/admin/cluster/observer/decisions",
            adminClusterLog: "/admin/cluster/log",
            adminDebugClusterHistoryLogs: "/admin/debug/cluster/history-logs",
            clusterNodeInfo: "/cluster/node-info",
            clusterTopology: "/cluster/topology",
            adminClusterMaintenanceStats: "/admin/cluster/maintenance-stats",
            adminClusterBootstrap: "/admin/cluster/bootstrap",
            adminClusterNode: "/admin/cluster/node",
            adminLicenseSetLimit: "/admin/license/set-limit",
            adminClusterTimeout: "/admin/cluster/timeout",
            adminClusterReelect: "/admin/cluster/reelect",
            adminClusterPromote: "/admin/cluster/promote",
            adminClusterDemote: "/admin/cluster/demote",
            adminClusterRemoveEntryFromLog: "/admin/cluster/remove-entry-from-log"
        }, 
        memoryDebug: { 
            adminDebugMemoryGc: "/admin/debug/memory/gc",
            adminDebugMemoryLowMemLog: "/admin/debug/memory/low-mem-log",
            adminDebugProcStatus: "/admin/debug/proc/status",
            adminDebugProcMeminfo: "/admin/debug/proc/meminfo",
            adminDebugMemorySmaps: "/admin/debug/memory/smaps",
            adminDebugMemoryStats: "/admin/debug/memory/stats",
            adminDebugMemoryEncryptionBufferPool: "/admin/debug/memory/encryption-buffer-pool"
        }, 
        nodeDebug: { 
            adminDebugNodeRemoteConnections: "/admin/debug/node/remote-connections",
            adminDebugNodeEngineLogs: "/admin/debug/node/engine-logs",
            adminDebugNodeStateChangeHistory: "/admin/debug/node/state-change-history",
            adminDebugNodePing: "/admin/debug/node/ping"
        }, 
        procStats: { 
            adminDebugCpuStats: "/admin/debug/cpu/stats",
            adminDebugProcStats: "/admin/debug/proc/stats"
        }, 
        serverInfo: { 
            debugServerId: "/debug/server-id"
        }, 
        serverTransactionDebug: { 
            adminDebugTxinfo: "/admin/debug/txinfo"
        }, 
        serverWideDebugInfoPackage: { 
            adminDebugRemoteClusterInfoPackage: "/admin/debug/remote-cluster-info-package",
            adminDebugClusterInfoPackage: "/admin/debug/cluster-info-package",
            adminDebugInfoPackage: "/admin/debug/info-package"
        }, 
        serverWideQueriesDebug: { 
            debugQueriesRunningLive: "/debug/queries/running/live"
        }, 
        threads: { 
            adminDebugThreadsStackTrace: "/admin/debug/threads/stack-trace",
            adminDebugThreadsRunaway: "/admin/debug/threads/runaway"
        }, 
        elasticSearchEtlConnection: { 
            adminEtlElasticsearchTestConnection: "/admin/etl/elasticsearch/test-connection"
        } 
    }
    static databases = { 
        analyzers: { 
            analyzers: "/analyzers"
        }, 
        attachment: { 
            attachments: "/attachments",
            attachmentsBulk: "/attachments/bulk",
            debugAttachmentsHash: "/debug/attachments/hash",
            debugAttachmentsMetadata: "/debug/attachments/metadata"
        }, 
        batch: { 
            bulk_docs: "/bulk_docs"
        }, 
        bulkInsert: { 
            bulk_insert: "/bulk_insert"
        }, 
        changes: { 
            changes: "/changes",
            changesDebug: "/changes/debug"
        }, 
        collections: { 
            collectionsStats: "/collections/stats",
            collectionsStatsDetailed: "/collections/stats/detailed",
            collectionsDocs: "/collections/docs"
        }, 
        configuration: { 
            configurationStudio: "/configuration/studio",
            configurationClient: "/configuration/client"
        }, 
        counters: { 
            counters: "/counters"
        }, 
        document: { 
            docs: "/docs",
            docsSize: "/docs/size",
            docsClass: "/docs/class"
        }, 
        documentsCompression: { 
            documentsCompressionConfig: "/documents-compression/config",
            adminDocumentsCompressionConfig: "/admin/documents-compression/config"
        }, 
        expiration: { 
            expirationConfig: "/expiration/config",
            adminExpirationConfig: "/admin/expiration/config"
        }, 
        hiLo: { 
            hiloNext: "/hilo/next",
            hiloReturn: "/hilo/return"
        }, 
        identity: { 
            identityNext: "/identity/next",
            identitySeed: "/identity/seed"
        }, 
        index: { 
            indexesReplace: "/indexes/replace",
            indexesFinishRolling: "/indexes/finish-rolling",
            indexesSource: "/indexes/source",
            indexesHistory: "/indexes/history",
            indexesHasChanged: "/indexes/has-changed",
            indexesDebug: "/indexes/debug",
            indexes: "/indexes",
            indexesStats: "/indexes/stats",
            indexesStaleness: "/indexes/staleness",
            indexesProgress: "/indexes/progress",
            indexOpenFaultyIndex: "/index/open-faulty-index",
            indexesCSharpIndexDefinition: "/indexes/c-sharp-index-definition",
            indexesStatus: "/indexes/status",
            indexesSetLock: "/indexes/set-lock",
            indexesSetPriority: "/indexes/set-priority",
            indexesErrors: "/indexes/errors",
            indexesTerms: "/indexes/terms",
            indexesTotalTime: "/indexes/total-time",
            indexesPerformance: "/indexes/performance",
            indexesPerformanceLive: "/indexes/performance/live",
            indexesSuggestIndexMerge: "/indexes/suggest-index-merge",
            indexesTry: "/indexes/try"
        }, 
        ioMetrics: { 
            debugIoMetrics: "/debug/io-metrics",
            debugIoMetricsLive: "/debug/io-metrics/live"
        }, 
        legacyReplication: { 
            replicationLastEtag: "/replication/lastEtag",
            replicationReplicateDocs: "/replication/replicateDocs",
            replicationReplicateAttachments: "/replication/replicateAttachments",
            replicationHeartbeat: "/replication/heartbeat",
            indexesLastQueried: "/indexes/last-queried",
            sideBySideIndexes: "/side-by-side-indexes"
        }, 
        multiGet: { 
            multi_get: "/multi_get"
        }, 
        performanceMetrics: { 
            debugPerfMetrics: "/debug/perf-metrics"
        }, 
        pullReplication: { 
            adminTasksPullReplicationHub: "/admin/tasks/pull-replication/hub",
            adminTasksPullReplicationHubAccess: "/admin/tasks/pull-replication/hub/access",
            adminTasksSinkPullReplication: "/admin/tasks/sink-pull-replication",
            adminPullReplicationGenerateCertificate: "/admin/pull-replication/generate-certificate"
        }, 
        queries: { 
            queries: "/queries",
            queriesTest: "/queries/test"
        }, 
        refresh: { 
            refreshConfig: "/refresh/config",
            adminRefreshConfig: "/admin/refresh/config"
        }, 
        replication: { 
            replicationTombstones: "/replication/tombstones",
            replicationConflicts: "/replication/conflicts",
            replicationPerformance: "/replication/performance",
            replicationPerformanceLive: "/replication/performance/live",
            replicationPulsesLive: "/replication/pulses/live",
            replicationActiveConnections: "/replication/active-connections",
            replicationDebugOutgoingFailures: "/replication/debug/outgoing-failures",
            replicationDebugIncomingLastActivityTime: "/replication/debug/incoming-last-activity-time",
            replicationDebugIncomingRejectionInfo: "/replication/debug/incoming-rejection-info",
            replicationDebugOutgoingReconnectQueue: "/replication/debug/outgoing-reconnect-queue",
            studioTasksSuggestConflictResolution: "/studio-tasks/suggest-conflict-resolution",
            replicationConflictsSolver: "/replication/conflicts/solver"
        }, 
        revisions: { 
            debugDocumentsGetRevisions: "/debug/documents/get-revisions",
            revisionsConfig: "/revisions/config",
            revisionsConflictsConfig: "/revisions/conflicts/config",
            adminRevisionsConflictsConfig: "/admin/revisions/conflicts/config",
            adminRevisionsConfig: "/admin/revisions/config",
            adminRevisionsConfigEnforce: "/admin/revisions/config/enforce",
            revisionsCount: "/revisions/count",
            revisions: "/revisions",
            revisionsRevert: "/revisions/revert",
            revisionsResolved: "/revisions/resolved",
            revisionsBin: "/revisions/bin"
        }, 
        sorters: { 
            sorters: "/sorters"
        }, 
        stats: { 
            statsDetailed: "/stats/detailed",
            stats: "/stats",
            healthcheck: "/healthcheck",
            metrics: "/metrics",
            metricsPuts: "/metrics/puts",
            metricsBytes: "/metrics/bytes"
        }, 
        subscriptions: { 
            subscriptionsTry: "/subscriptions/try",
            subscriptions: "/subscriptions",
            subscriptionsState: "/subscriptions/state",
            subscriptionsConnectionDetails: "/subscriptions/connection-details",
            subscriptionsPerformanceLive: "/subscriptions/performance/live",
            subscriptionsDrop: "/subscriptions/drop",
            subscriptionsUpdate: "/subscriptions/update"
        }, 
        tcpManagement: { 
            tcp: "/tcp"
        }, 
        timeSeries: { 
            timeseriesStats: "/timeseries/stats",
            timeseriesRanges: "/timeseries/ranges",
            timeseries: "/timeseries",
            timeseriesConfig: "/timeseries/config",
            adminTimeseriesConfig: "/admin/timeseries/config",
            adminTimeseriesPolicy: "/admin/timeseries/policy",
            timeseriesNamesConfig: "/timeseries/names/config",
            timeseriesDebugSegmentsSummary: "/timeseries/debug/segments-summary"
        }, 
        transactionsRecording: { 
            transactionsReplay: "/transactions/replay",
            adminTransactionsStartRecording: "/admin/transactions/start-recording",
            adminTransactionsStopRecording: "/admin/transactions/stop-recording"
        }, 
        databaseNotificationCenter: { 
            notificationCenterWatch: "/notification-center/watch",
            notificationCenterDismiss: "/notification-center/dismiss",
            notificationCenterPostpone: "/notification-center/postpone"
        }, 
        operations: { 
            operationsNextOperationId: "/operations/next-operation-id",
            operationsKill: "/operations/kill",
            operations: "/operations",
            operationsState: "/operations/state"
        }, 
        sampleData: { 
            studioSampleData: "/studio/sample-data",
            studioSampleDataClasses: "/studio/sample-data/classes"
        }, 
        sqlMigration: { 
            adminSqlMigrationSchema: "/admin/sql-migration/schema",
            adminSqlMigrationImport: "/admin/sql-migration/import",
            adminSqlMigrationTest: "/admin/sql-migration/test"
        }, 
        studioCollectionFields: { 
            studioCollectionsFields: "/studio/collections/fields"
        }, 
        studioCollections: { 
            studioCollectionsPreview: "/studio/collections/preview",
            studioCollectionsDocs: "/studio/collections/docs"
        }, 
        studioDatabaseTasks: { 
            adminStudioTasksFolderPathOptions: "/admin/studio-tasks/folder-path-options",
            studioTasksIndexesConfigurationDefaults: "/studio-tasks/indexes/configuration/defaults"
        }, 
        studioIndex: { 
            studioIndexType: "/studio/index-type",
            studioIndexFields: "/studio/index-fields"
        }, 
        studioStats: { 
            studioFooterStats: "/studio/footer/stats"
        }, 
        adminConfiguration: { 
            adminConfigurationSettings: "/admin/configuration/settings",
            adminRecord: "/admin/record",
            adminConfigurationStudio: "/admin/configuration/studio",
            adminConfigurationClient: "/admin/configuration/client"
        }, 
        compareExchange: { 
            cmpxchg: "/cmpxchg"
        }, 
        ongoingTasks: { 
            tasks: "/tasks",
            adminPeriodicBackupConfig: "/admin/periodic-backup/config",
            adminDebugPeriodicBackupTimers: "/admin/debug/periodic-backup/timers",
            adminPeriodicBackup: "/admin/periodic-backup",
            adminBackupDataDirectory: "/admin/backup-data-directory",
            adminBackupDatabase: "/admin/backup/database",
            adminBackup: "/admin/backup",
            adminConnectionStrings: "/admin/connection-strings",
            adminEtl: "/admin/etl",
            task: "/task",
            tasksPullReplicationHub: "/tasks/pull-replication/hub",
            subscriptionTasksState: "/subscription-tasks/state",
            adminTasksState: "/admin/tasks/state",
            adminTasksExternalReplication: "/admin/tasks/external-replication",
            subscriptionTasks: "/subscription-tasks",
            adminTasks: "/admin/tasks"
        }, 
        etl: { 
            etlStats: "/etl/stats",
            etlDebugStats: "/etl/debug/stats",
            etlPerformance: "/etl/performance",
            etlPerformanceLive: "/etl/performance/live",
            etlProgress: "/etl/progress"
        }, 
        adminAnalyzers: { 
            adminAnalyzers: "/admin/analyzers"
        }, 
        adminIndex: { 
            adminIndexes: "/admin/indexes",
            indexes: "/indexes",
            adminIndexesStop: "/admin/indexes/stop",
            adminIndexesStart: "/admin/indexes/start",
            adminIndexesEnable: "/admin/indexes/enable",
            adminIndexesDisable: "/admin/indexes/disable",
            adminIndexesDump: "/admin/indexes/dump"
        }, 
        adminRevisions: { 
            adminRevisions: "/admin/revisions"
        }, 
        adminSorters: { 
            adminSorters: "/admin/sorters"
        }, 
        adminTombstone: { 
            adminTombstonesCleanup: "/admin/tombstones/cleanup",
            adminTombstonesState: "/admin/tombstones/state"
        }, 
        transactionsMode: { 
            adminTransactionsMode: "/admin/transactions-mode"
        }, 
        databaseDebugInfoPackage: { 
            debugInfoPackage: "/debug/info-package"
        }, 
        documentDebug: { 
            debugDocumentsHuge: "/debug/documents/huge"
        }, 
        exportAllDocIds: { 
            debugDocumentsExportAllIds: "/debug/documents/export-all-ids"
        }, 
        identityDebug: { 
            debugIdentities: "/debug/identities"
        }, 
        queriesDebug: { 
            debugQueriesKill: "/debug/queries/kill",
            debugQueriesRunning: "/debug/queries/running",
            debugQueriesCacheList: "/debug/queries/cache/list"
        }, 
        scriptRunnersDebugInfo: { 
            debugScriptRunners: "/debug/script-runners"
        }, 
        storage: { 
            adminStorageManualFlush: "/admin/storage/manual-flush",
            adminStorageManualSync: "/admin/storage/manual-sync",
            debugStorageTrees: "/debug/storage/trees",
            debugStorageBtreeStructure: "/debug/storage/btree-structure",
            debugStorageFstStructure: "/debug/storage/fst-structure",
            debugStorageReport: "/debug/storage/report",
            debugStorageAllEnvironmentsReport: "/debug/storage/all-environments/report",
            debugStorageEnvironmentReport: "/debug/storage/environment/report"
        }, 
        transactionDebug: { 
            adminDebugTxinfo: "/admin/debug/txinfo",
            adminDebugClusterTxinfo: "/admin/debug/cluster/txinfo"
        }, 
        streaming: { 
            streamsDocs: "/streams/docs",
            streamsTimeseries: "/streams/timeseries",
            streamsQueries: "/streams/queries"
        }, 
        smuggler: { 
            smugglerValidateOptions: "/smuggler/validate-options",
            smugglerExport: "/smuggler/export",
            adminSmugglerImport: "/admin/smuggler/import",
            adminSmugglerImportS3Dir: "/admin/smuggler/import-s3-dir",
            adminSmugglerImportDir: "/admin/smuggler/import-dir",
            adminSmugglerMigrateRavendb: "/admin/smuggler/migrate/ravendb",
            migrateGetMigratedServerUrls: "/migrate/get-migrated-server-urls",
            adminSmugglerMigrate: "/admin/smuggler/migrate",
            smugglerImport: "/smuggler/import",
            smugglerImportCsv: "/smuggler/import/csv"
        }, 
        elasticSearchEtl: { 
            adminEtlElasticsearchTest: "/admin/etl/elasticsearch/test"
        }, 
        olapEtl: { 
            adminEtlOlapTest: "/admin/etl/olap/test"
        }, 
        ravenEtl: { 
            adminEtlRavenTest: "/admin/etl/raven/test"
        }, 
        sqlEtl: { 
            adminEtlSqlTestConnection: "/admin/etl/sql/test-connection",
            adminEtlSqlTest: "/admin/etl/sql/test"
        } 
    }

}
export = endpointConstants;